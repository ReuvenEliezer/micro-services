#version: "3.9"
services:
  admin-server:
    build:
      context: ./admin
      dockerfile: Dockerfile
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
    ports:
      - "8085:8085"
    networks:
      - my-network
    depends_on:
      - eureka-server
  converter-service:
    build:
      context: ./converter-service
      dockerfile: Dockerfile
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 30s  # preventing multiple services from trying to bind to the same port simultaneously
    depends_on:
#      - zipkin-server
      - admin-server
      - gateway
      - eureka-server
    ports:
      - "19091-19092:9091"
    networks:
      - my-network
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - "MANAGEMENT.ZIPKIN.TRACING.ENDPOINT=http://zipkin-server:9411/api/v2/spans"
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
  aggregation-service:
    build:
      context: ./aggregation-service
      dockerfile: Dockerfile
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 30s  # preventing multiple services from trying to bind to the same port simultaneously
    depends_on:
#      - zipkin-server
      - admin-server
      - gateway
      - eureka-server
      - converter-service
      - redis
    ports:
      - "18081-18082:8081" # for scaling-services https://www.baeldung.com/dockerizing-spring-boot-application#3-scaling-services
    networks:
      - my-network
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - "MANAGEMENT.ZIPKIN.TRACING.ENDPOINT=http://zipkin-server:9411/api/v2/spans"
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - "SPRING_REDIS_HOST=redis-server" # container name
  eureka-server:
    build:
      context: eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - my-network
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
  gateway:
    build:
      context: gateway
      dockerfile: Dockerfile
    depends_on:
      - admin-server
      - eureka-server
    ports:
      - "8080:8080"
    networks:
      - my-network
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
  redis:
    image: "redis:alpine"
    container_name: "redis-server"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - my-network
volumes:
  redis_data:
    driver: local
networks:
  my-network:
    driver: bridge