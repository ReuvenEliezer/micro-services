server:
  port: 8085
eureka:
  client:
    registryFetchIntervalSeconds: 5
    registerWithEureka: false # to prevent the Admin Server from being monitored by itself through the Eureka server
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
#    hostname: localhost
    preferIpAddress: true
spring:
  boot:
    admin:
      discovery:
#        ignored-services: eureka-server
        enabled: true
#        services: http://localhost:8761/eureka/
  #        services: http://eureka:8761/eureka/
  application:
    name: @project.artifactId@
    version: @project.version@
  # spring:
  #   security:
  #     user:
  #       name: admin
  #       password: admin
  # configs to connect to self-register the admin server as a client
#  boot:
#    admin:
#      client:
#        url: http://localhost:8080
#       username: ${spring.security.user.name}
#       password: ${spring.security.user.password}
# configs to give secured server info
#       instance:
#         metadata:
#           user:
#             name: ${spring.security.user.name}
#             password: ${spring.security.user.password}
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
springdoc:
  version: '@springdoc.version@'
  api-docs:
    version: openapi_3_1
  swagger-ui:
    use-root-path: true