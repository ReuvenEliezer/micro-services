# The name of the workflow. GitHub displays the names of your workflows under your repository's "Actions" tab. If you omit `name`, GitHub displays the workflow file path relative to the root of the repository.
name: CI

#
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
#
jobs:
  build:
    permissions: write-all #for dependabot auto PR - create a test report
    # <!-- This is a YAML comment for use in annotated code examples. -->
    # You can run this workflow using a different operating systems.
    #
    # The starter workflow configures jobs to run on Linux, using the GitHub-hosted `ubuntu-latest` runners. You can change the `runs-on` key to run your jobs on a different operating system.
    #
    # For example, you can use the GitHub-hosted Windows runners by specifying `runs-on: windows-latest`. Or, you can run on the GitHub-hosted macOS runners using `runs-on: macos-latest`.
    #
    # You can also run jobs in Docker containers, or you can provide a self-hosted runner that runs on your own infrastructure. For more information, see "[AUTOTITLE](/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idruns-on)."
    runs-on: ubuntu-latest
    #
    env:
      COMPOSE_FILE: docker-compose.yml
    steps:
      # This step uses the `actions/checkout` action to download a copy of your repository on the runner.
      - uses: actions/checkout@v4
      # This step uses the `actions/setup-java` action to configure the Eclipse Temurin (Java) 17 JDK by Eclipse Adoptium.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: "Set up environment"
        run: docker compose -f docker-compose.yml up -d --wait
      #      - name: "Wait for docker to finish building"
      #        run: sleep 10 # wait until docker container started

      # The "Build with Maven" step runs the Maven `package` target in non-interactive mode to ensure that your code builds, tests pass, and a package can be created.
      - name: Build by Maven
        run: mvn clean install -DskipTests=true
      - name: run dev tests
        run: mvn test -Dspring.profiles.active=dev
      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      #      - name: Update dependency graph
      #        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      #      - name: Publish Test Report
      #        uses: mikepenz/action-junit-report@v1
      #        if: success() || failure() # always run even if the previous step fails
      #        with:
      #          report_paths: '**/build/test-results/test/TEST-*.xml'
      #      - name: Run JUnit Tests
      #        run: mvn test
#      - name: Converter Service JUnit Test Report
#        uses: mikepenz/action-junit-report@v4 #@v4.0.3
#        if: success() || failure() # always run even if the previous step fails
#        with:
#          report_paths: converter-service/target/surefire-reports/*.xml
      - name: converter-service JUnit Test Report
        uses: dorny/test-reporter@v1.8.0 #{owner}/{repository}@{ref}
        if: (success() || failure())
        #        if: github.actor != 'dependabot[bot]' && (success() || failure())
        with:
          name: Tests - converter-service #for analysis tests report
          path: converter-service/target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true
      - name: aggregation-service JUnit Test Report #for analysis tests report
        uses: dorny/test-reporter@v1.8.0 #{owner}/{repository}@{ref} https://github.com/marketplace/actions/test-reporter
        if: (success() || failure())
#        if: github.actor != 'dependabot[bot]' && (success() || failure())
        with:
          name: Tests - aggregation-service
          path: aggregation-service/target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true
#      - name: "docker compose down"
#        run: docker compose down
#      - name: "Wait for docker down"
#        run: sleep 60 # wait until docker container down
#      - name: "docker compose integration up"
#        run: docker compose -f docker-compose.yml up -d --wait
      - name: "run integration tests"
        run: mvn test -Dspring.profiles.active=docker
      - name: converter-service integration Test Report
        uses: dorny/test-reporter@v1.8.0 #{owner}/{repository}@{ref}
        if: (success() || failure())
       #        if: github.actor != 'dependabot[bot]' && (success() || failure())
        with:
          name: Integration Tests - converter-service #for analysis tests report
          path: converter-service/target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true


      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{secrets.github_token}}

      # Now you can pass ${{ steps.buildnumber.outputs.build_number }} to the next steps.
      - name: Another step as an example
        uses: actions/hello-world-docker-action@v1
        with:
          who-to-greet: ${{ steps.buildnumber.outputs.build_number }}
      - name: Output Run ID
        run: echo ${{ github.run_id }}
      - name: Output Run Number
        run: echo ${{ github.run_number }}
      - name: Output Run Attempt
        run: echo ${{ github.run_attempt }}
